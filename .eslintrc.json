{
  "env": {
    "es6": true
  },
  "extends": [
    "plugin:@darraghor/nestjs-typed/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": ["./tsconfig.json"],
    "sourceType": "module",
    "ecmaVersion": "latest"
  },
  "plugins": ["@darraghor/nestjs-typed", "import"],
  "rules": {
    "no-extra-semi": ["error"], //세미콜론 연속으로 2개 이상 삽입 시 설정
    "arrow-parens": ["warn", "as-needed"], //(parens == parenthesis) 화살표 함수의 파라미터가 하나일때 괄호 생략
    "import/prefer-default-export": ["off"], // export const 문을 쓸때 에러를 내는 규칙 해제
    "linebreak-style": ["off"], //linebreak 스타일 지정인데 unix, windows에서 linebreak 문자 때문에 에러발생할 수도
    "import/extensions": ["off"], //import 시 확장자명 표시 설정
    "prettier/prettier": ["error", { "endOfLine": "auto" }],
    "no-use-before-define": ["off"], //변수, 함수, 클래스가 선언 되기전에 사용을 금지한다는 설정,
    "no-shadow": ["error"], //외부 범위에 선언된 섀도우 변수 선언 허용 여부 설정
    "quote-props": "off", // 키워드 or '-'포함 속성명에 따옴표 붙이기
    "no-prototype-builtins": "warn", // Object.prototype 메서드 직접 사용 금지
    "array-callback-return": "warn", // 배열 메서드 콜백에 반환 문 사용
    "prefer-destructuring": "error", // [TEST 필요] Use array destructuring
    "func-style": "off", // 함수 스타일 통일 -> prettier에서 설정
    "import/newline-after-import": ["error"],
    "import/no-unresolved": ["off"], //import 경로의 파일을 인식할수 없는 상황이 없도록 하는 옵션? (옵션을 사용하면 경로 인식이 안됨)
    "import/no-extraneous-dependencies": ["off"], //패키지에 선언되지 않은 외부 모듈의 가져오기 설정 (사용하면 에러 발생함)
    "import/no-mutable-exports": "error", // mutable 객체를 export 하는 것에 대해 강제
    "import/no-webpack-loader-syntax": "warn", // 웹팩 로더 문법 사용 공부 필요
    "no-plusplus": ["error", { "allowForLoopAfterthoughts": true }], // 반복문의 증감삭에선 ++, -- 연산자 사용이 가능. 연산자와 피연산자 사이에 공백을 두지 않음.
    "@typescript-eslint/no-unused-vars": [
      "error",
      { "argsIgnorePattern": "^_" }
    ], // 사용하지 않는 변수가 있을때 빌드에러가 나던 규칙 해제
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@darraghor/nestjs-typed/injectable-should-be-provided": "off",
    "@darraghor/nestjs-typed/controllers-should-supply-api-tags": "off",
    "@darraghor/nestjs-typed/api-method-should-specify-api-response": "off"
  }
}
